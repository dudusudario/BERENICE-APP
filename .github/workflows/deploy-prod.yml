name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'VersÃ£o para deploy (formato: v1.2.3)'
        required: true
      confirm:
        description: 'Confirmar deploy para produÃ§Ã£o'
        required: true
        default: 'no'

jobs:
  build-and-deploy:
    if: (github.event_name == 'release') || (github.event_name == 'workflow_dispatch' && github.event.inputs.confirm == 'yes')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.release.tag_name || github.event.inputs.version }}
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Test
      run: npm test
    
    - name: Build
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.PROD_API_URL }}
        VITE_ENV: 'production'
    
    - name: Create .env file
      run: |
        echo "API_URL=${{ secrets.PROD_API_URL }}" >> .env
        echo "ENV=production" >> .env
    
    - name: Create deploy package
      run: |
        mkdir -p deployment
        cp -r dist deployment/
        cp .env deployment/
        cp package.json deployment/
        cp package-lock.json deployment/
        cd deployment && tar -czf ../deploy.tar.gz .
    
    - name: Backup current production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
        script: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          mkdir -p ${{ secrets.PROD_BACKUP_PATH }}/$TIMESTAMP
          cp -r ${{ secrets.PROD_TARGET_PATH }}/* ${{ secrets.PROD_BACKUP_PATH }}/$TIMESTAMP/ || true
          echo "Backup created at ${{ secrets.PROD_BACKUP_PATH }}/$TIMESTAMP"
    
    - name: Deploy to Production Server
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i --delete"
        SOURCE: "dist/"
        REMOTE_HOST: ${{ secrets.PROD_HOST }}
        REMOTE_USER: ${{ secrets.PROD_USER }}
        TARGET: ${{ secrets.PROD_TARGET_PATH }}
        EXCLUDE: "/dist/, /node_modules/, /.git/, /.github/"
    
    - name: Post-deploy commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.PROD_TARGET_PATH }}
          cp .env dist/
          pm2 restart prod-app || pm2 start npm --name "prod-app" -- start
    
    - name: Send Slack notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: '#FF0000'
        SLACK_TITLE: 'ðŸš€ Deploy para produÃ§Ã£o realizado'
        SLACK_MESSAGE: 'Uma nova versÃ£o (${{ github.event.release.tag_name || github.event.inputs.version }}) foi implantada no ambiente de produÃ§Ã£o'
        SLACK_FOOTER: 'GitHub Actions' 